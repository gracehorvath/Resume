/////////////////GRID SETUP///////////////////////
//full page col width
@for $i from 1 through 12 {
    $equ: 100%/$i;
    .row.cols-#{$i} .col {
        width: $equ;
    }
}

//break points and a guestimate of how many col iterations we need for each; assumes that at breakpoint x there will not be more than x cols
$map: (850:12, 450:6, 380:3);
//iterates through each breakpoint
@each $breakPoint,
$cols in $map {
    //creates a media query for the breakpoint
    @media all and (max-width: $breakPoint + px) {
        //iterates through the cols in the curr breakpoint
        @for $i from 1 through $cols {
            $equ: 100%/$i;
            //sets the width for each col based on the breakpoint and specified col amount
            .row.cols-#{$breakPoint}-#{$i} .col {
                width: $equ;
            }
        }
    }
}

//sets row height to specified 'fill' percentage
@for $i from 1 through 10 {
    $equ: 10%*$i;
    .row.fill-#{$i} {
        height: $equ;
    }
}
.row {
    position: relative;
    width: 100%;
    margin: 0 auto;
    .col {
        padding: 0 25px 0 25px;
        position:relative;
        height:100%;
        background: #ccc;
        border: 1px solid #aaa;
        box-sizing: border-box;
        float: left;
    }
}
/////////////////////END GRID SETUP//////////////////

/////////////////////MIXINS/////////////////////////
@mixin center($x, $y) {
    position: absolute;
    @if ($x and $y) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    @else if ($x) {
        left: 50%;
        transform: translate(-50%, 0);
    }
    @else if ($y) {
        top: 50%;
        transform: translate(0, -50%);
    }
}
///////////////////END MIXINS/////////////////////

///////////////////BUTTONS///////////////////////
.button{
    display:inline-block;
    text-decoration:none;
    font-family:"helvetica";
    font-size:14px;
    font-weight:200;
    background-color:#ccc;
    color:#222;
    padding: 10px 15px;
    border:none;
    border-radius:3px;
    transition: all .2s;
}
.button:hover{
    background:#bbb;
    transition: all .2s;
}

//dummy color data for test
$colormap:(
    green:(background: #86c351, hover:#78b04a),
    blue:(background: #00b3e0, hover:#0097be),
    red:(background: #ff5817, hover:#da4912)
);

@each $color, $map in $colormap{
    .button.#{$color}{
       background-color: map-get($map, 'background');
    }
    .button.#{$color}:hover{
        background-color:map-get($map, 'hover');
    }
}
///////////////////END BUTTONS//////////////////

.center{
    @include center(true, true);
}
.center-vertical{
    @include center(false, true);
}
.center-horizontal{
    @include center(true, false);
}
section{
    height:100vh;
    background-color: #ccc;
    &.content{
        padding: 0 10% 0 10%;
    }
}

//changing content padding for breakpoints
$map: (850:5%, 450:0);
@each $breakPoint,
$padd in $map {
    @media all and (max-width: $breakPoint + px) {
        section.content{
            padding: 0 $padd 0 $padd
        }
    }
}
.heading {
    @include center(true, true);
    border: 1px solid white;
    text-align: center;
    padding-left: 10px;
    padding-right: 10px;
    p {
        position: absolute;
        left: 0;
        right: 0;
        bottom: -25px;
        span {
            background-color: #ccc;
            padding-left: 8px;
            padding-right: 8px;
        }
    }
}

p{word-wrap: break-word;}
img{
    max-height: 100%;
    max-width: 100%;
}